#include<iostream>
using namespace std;
class heap{
int arr[100];
int size;
public:
heap(){
	arr[0]=-1;
	size=0;
	}
	//insertion code
	void insert(int val){
		size=size+1;
		int idx=size;
		arr[idx]=val;
		while(idx>1){
			int parent=idx/2;
			if(arr[idx]>arr[parent]){
				swap(arr[idx],arr[parent]);
				idx=parent;
				}
				else{
					return ;
				}
		}
		}
		// deletion code
		void deletefromheap(){
			if(size==0){
				cout<<"there is nothing to be deleted";	}
				arr[1]=arr[size];
				size--;
				int i=1;
			
				while(i<size){
					int left=2*i;
					int right=2*i+1;
						int swapidx=i;
			if(left<=size && arr[left]>arr[swapidx] ){
						swapidx=left;
					}
	  if(right<=size && arr[right]>arr[swapidx] ){
						swapidx=right;
					}
					
						if(swapidx!=i){
							swap(arr[swapidx],arr[i]);
							i=swapidx;
						}
						else{
						return ;
						}
						
				}
		}	
		void print(){
			for(int i=1;i<=size;i++){
				cout<<arr[i]<<"  ";
			}
		}
		
		
		
};
int main(){
	heap h;
	h.insert(40);
	h.insert(55);
	h.insert(43);
	h.insert(48);
	h.insert(73);
	h.insert(37);
	
	h.deletefromheap();
	h.print();
	return 0;
	}
